# https://editor.swagger.io/?_ga=2.166046390.926583651.1656911588-2111575381.1656911588
swagger: "2.0"
info:
  description: "A set of endpoints to allow the coordination, retreval, and generation of Fake Data in a distributed fasion."
  version: "0.0.1"
  title: "Fake Data REST API"
  contact:
    email: "josh@bowerspro.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3181"
basePath: "/v1"
tags:
- name: "uuid"
  description: "Generate/Access UUIDs"
  # externalDocs:
  #   description: "Find out more"
  #   url: "http://swagger.io"
# - name: "store"
#   description: "Access to Petstore orders"
# - name: "user"
#   description: "Operations about user"
#   externalDocs:
#     description: "Find out more about our store"
#     url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /uuid:
    post:
      tags:
      - "uuid"
      summary: "request generation of a set of UUIDs"
      description: "This endpoint is to trigger the creation of a set/group/batch of UUIDs used within fake data."
      operationId: "genUUIDs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Configuration required to generate UUIDs"
        required: true
        schema:
          $ref: "#/definitions/uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/uuid_operation"
        "405":
          description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"
  /uuid/{batch}:
    get:
      tags:
      - "uuid"
      summary: "retrieve a uuid based on a provided integer."
      description: "This assumes the provided integer is a consecutive integer and that it is with in the bounds of the specified set/group/batch."
      parameters:
      - name: "batch"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/uuid_operation"
        "405":
          description: "Invalid input"
  
  /uuid/{batch}/status:
    get:
      tags:
      - "uuid"
      summary: ""
      description: ""
      parameters:
      - name: "batch"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/uuid_operation"
        "405":
          description: "Invalid input"
  # /pet/{petId}:
  #   get:
  #     tags:
  #     - "pet"
  #     summary: "Find pet by ID"
  #     description: "Returns a single pet"
  #     operationId: "getPetById"
  #     produces:
  #     - "application/xml"
  #     - "application/json"
  #     parameters:
  #     - name: "petId"
  #       in: "path"
  #       description: "ID of pet to return"
  #       required: true
  #       type: "integer"
  #       format: "int64"
  #     responses:
  #       "200":
  #         description: "successful operation"
  #         schema:
  #           $ref: "#/definitions/Pet"
  #       "400":
  #         description: "Invalid ID supplied"
  #       "404":
  #         description: "Pet not found"
  #     security:
  #     - api_key: []
  #   post:
  #     tags:
  #     - "pet"
  #     summary: "Updates a pet in the store with form data"
  #     description: ""
  #     operationId: "updatePetWithForm"
  #     consumes:
  #     - "application/x-www-form-urlencoded"
  #     produces:
  #     - "application/xml"
  #     - "application/json"
  #     parameters:
  #     - name: "petId"
  #       in: "path"
  #       description: "ID of pet that needs to be updated"
  #       required: true
  #       type: "integer"
  #       format: "int64"
  #     - name: "name"
  #       in: "formData"
  #       description: "Updated name of the pet"
  #       required: false
  #       type: "string"
  #     - name: "status"
  #       in: "formData"
  #       description: "Updated status of the pet"
  #       required: false
  #       type: "string"
  #     responses:
  #       "405":
  #         description: "Invalid input"
  #     security:
  #     - petstore_auth:
  #       - "write:pets"
  #       - "read:pets"
  #   delete:
  #     tags:
  #     - "pet"
  #     summary: "Deletes a pet"
  #     description: ""
  #     operationId: "deletePet"
  #     produces:
  #     - "application/xml"
  #     - "application/json"
  #     parameters:
  #     - name: "api_key"
  #       in: "header"
  #       required: false
  #       type: "string"
  #     - name: "petId"
  #       in: "path"
  #       description: "Pet id to delete"
  #       required: true
  #       type: "integer"
  #       format: "int64"
  #     responses:
  #       "400":
  #         description: "Invalid ID supplied"
  #       "404":
  #         description: "Pet not found"
  #     security:
  #     - petstore_auth:
  #       - "write:pets"
  #       - "read:pets"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  # api_key:
  #   type: "apiKey"
  #   name: "api_key"
  #   in: "header"
definitions:
  uuid:
    type: "object"
    required:
    - "count"
    - "name"
    properties:
      count:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      id:
        type: "integer"
        format: "int64"
  uuid_operation:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        enum: [ "pending", "processing", "success", "fail" ]
      
#   ApiResponse:
#     type: "object"
#     properties:
#       code:
#         type: "integer"
#         format: "int32"
#       type:
#         type: "string"
#       message:
#         type: "string"
# externalDocs:
#   description: "Find out more about Swagger"
#   url: "http://swagger.io"